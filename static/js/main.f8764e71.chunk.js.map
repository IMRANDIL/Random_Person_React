{"version":3,"sources":["App.js","index.js"],"names":["App","useState","loading","setLoading","person","setPerson","title","setTitle","value","setValue","getPerson","a","fetch","response","json","data","results","phone","email","image","picture","large","password","login","name","first","last","age","dob","location","street","number","newPeople","useEffect","handleValue","e","currentTarget","classList","contains","newValue","dataset","label","className","src","alt","data-label","onMouseOver","type","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAoGeA,MAzFf,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEeF,mBAAS,MAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGaJ,mBAAS,QAHtB,mBAGNK,EAHM,KAGCC,EAHD,OAIaN,mBAAS,iBAJtB,mBAINO,EAJM,KAICC,EAJD,KAMPC,EAAS,uCAAG,wDAAAC,EAAA,sEACOC,MATf,8BAQQ,cACVC,EADU,gBAEGA,EAASC,OAFZ,OAEVC,EAFU,OAGVX,EAASW,EAAKC,QAAQ,GACpBC,EAAiBb,EAAjBa,MAAOC,EAAUd,EAAVc,MACAC,EAAUf,EAAOgB,QAAxBC,MACSC,EAAelB,EAAxBmB,MAASD,SAND,EAOQlB,EAAOoB,KAAvBC,EAPQ,EAORA,MAAOC,EAPC,EAODA,KACAC,EAAUvB,EAAjBwB,IAAOD,IARC,EASqBvB,EAAOyB,SAApCC,OAAUC,EATF,EASEA,OAAQP,EATV,EASUA,KAEpBQ,EAAY,CAChBb,QACAF,QACAC,QACAI,WACAK,MACAG,OAAO,GAAD,OAAKC,EAAL,YAAeP,GACrBA,KAAK,GAAD,OAAKC,EAAL,YAAcC,IAEpBrB,EAAU2B,GACV7B,GAAW,GACXI,EAAS,QACTE,EAASuB,EAAUR,MAvBH,4CAAH,qDA0BfS,qBAAU,WACRvB,MACC,IAOH,IAAMwB,EAAc,SAACC,GACnB,GAAGA,EAAEC,cAAcC,UAAUC,SAAS,QAAQ,CAC5C,IAAMC,EAAWJ,EAAEC,cAAcI,QAAQC,MACzClC,EAASgC,GACT9B,EAASL,EAAOmC,MAIpB,OAAO,8BACL,yBAAKG,UAAU,oBACf,yBAAKA,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKC,IAAMvC,GAAUA,EAAOe,OAtDf,iDAsDuCyB,IAAI,MAAMF,UAAU,aACxE,uBAAGA,UAAU,cAAb,MACMpC,EADN,OAGA,uBAAGoC,UAAU,cACVlC,GAEH,yBAAKkC,UAAU,eACb,4BAAQA,UAAU,OAAOG,aAAW,OAAOC,YAAaZ,GACtD,kBAAC,IAAD,OAEF,4BAAQQ,UAAU,OAAOG,aAAW,QAAQC,YAAaZ,GACvD,kBAAC,IAAD,OAEF,4BAAQQ,UAAU,OAAOG,aAAW,MAAMC,YAAaZ,GACrD,kBAAC,IAAD,OAEF,4BAAQQ,UAAU,OAAOG,aAAW,SAASC,YAAaZ,GACxD,kBAAC,IAAD,OAEF,4BAAQQ,UAAU,OAAOG,aAAW,QAAQC,YAAaZ,GACvD,kBAAC,IAAD,OAEF,4BAAQQ,UAAU,OAAOG,aAAW,WAAWC,YAAaZ,GAC1D,kBAAC,IAAD,QAGJ,4BAAQQ,UAAU,MAAMK,KAAK,SAASC,QAAStC,GAC5CR,EAAU,aAAe,mBCvFpC+C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.f8764e71.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  FaEnvelopeOpen,\n  FaUser,\n  FaCalendarTimes,\n  FaMap,\n  FaPhone,\n  FaLock,\n} from 'react-icons/fa'\nconst url = 'https://randomuser.me/api/'\nconst defaultImage = 'https://randomuser.me/api/portraits/men/75.jpg'\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [person, setPerson] = useState(null);\n  const [title, setTitle] = useState('name');\n  const [value, setValue] = useState('random person');\n\n  const getPerson = async () => {\n    const response = await fetch(url);\n    const data = await response.json();\n    const person = data.results[0];\n    const { phone, email } = person;\n    const { large: image } = person.picture;\n    const { login: { password } } = person;\n    const { first, last } = person.name;\n    const { dob: { age } } = person;\n    const { street: { number, name } } = person.location;\n\n    const newPeople = {\n      image,\n      phone,\n      email,\n      password,\n      age,\n      street: `${number} ${name}`,\n      name: `${first} ${last}`\n    }\n    setPerson(newPeople);\n    setLoading(false);\n    setTitle('name')\n    setValue(newPeople.name)\n  }\n\n  useEffect(() => {\n    getPerson()\n  }, [])\n\n\n\n\n\n\n  const handleValue = (e) => {\n    if(e.currentTarget.classList.contains('icon')){\n      const newValue = e.currentTarget.dataset.label\n      setTitle(newValue)\n      setValue(person[newValue])\n    }\n  }\n\n  return <main>\n    <div className=\"block bcg-black\"></div>\n    <div className=\"block\">\n      <div className=\"container\">\n        <img src={(person && person.image) || defaultImage} alt=\"img\" className='user-img' />\n        <p className=\"user-title\">\n          my {title} is\n        </p>\n        <p className=\"user-value\">\n          {value}\n        </p>\n        <div className=\"values-list\">\n          <button className='icon' data-label='name' onMouseOver={handleValue}>\n            <FaUser />\n          </button>\n          <button className='icon' data-label='email' onMouseOver={handleValue}>\n            <FaEnvelopeOpen />\n          </button>\n          <button className='icon' data-label='age' onMouseOver={handleValue}>\n            <FaCalendarTimes />\n          </button>\n          <button className='icon' data-label='street' onMouseOver={handleValue}>\n            <FaMap />\n          </button>\n          <button className='icon' data-label='phone' onMouseOver={handleValue}>\n            <FaPhone />\n          </button>\n          <button className='icon' data-label='password' onMouseOver={handleValue}>\n            <FaLock />\n          </button>\n        </div>\n        <button className='btn' type='button' onClick={getPerson}>\n          {loading ? 'loading...' : 'random user'}\n        </button>\n      </div>\n    </div>\n\n  </main>\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}